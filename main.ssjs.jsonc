//
// core concept of the SSJS is a "kind"
// multiple kinds can be expressed using a single type, for example:
//   kind=line
//   ensures the string data type of the object (optionally enforcing "min" and
//   "max" len of the string and a "rex" regular expressions match), so a valid
//   data type for kind=line can be any string object (note "min", "max", "rex")
//   kind=date
//   ensures the string data type of the object AND ensures it is a valid date
//   string which follows some specific date format "fmt"
//
// "kind" implementation is a subclass of "ssjs.core.base.Kind" which must be
// also decorated with a "@ssjs.core.base.kind" decorator specifying a name
// to be used in ssjs schemas to refer this kind
//
//
//
[
  //
  // EXAMPLE 01
  //
  {
    // 
    "line?":
    {
      "min": 1,
      "max": 5,
      "rex": ".*"
    }
  },

  //
  //
  //
  {
    "list-!":
    {
      // len checks are all optional
      "min": 1,
      "max": 6,
      "enu": [1, 2, 3, 4, 5, 6],
      "div": { "1": [1, 2, 3, 4, 5, 6], "2": [] },
      "mod": { "2": [0] },
      "eom": true,
      "map":
      {
        // all list items are "line-?", same as "0::line-?"
        "::line-?": { },

        // list items with idexes 0, 1, 2, 3, 4, 5 (start and end index) are "line-!"
        "0:5:line-!": { },

        // list items with idexes 0, 1, 2, 3, 4, 5 (start and end index)
        // and index % 2 is in [0] (even indexes only) are "line-?"
        "0:5:line-?": { "mod": { "2": [ 0 ] } }
      }
    }
  }
]
